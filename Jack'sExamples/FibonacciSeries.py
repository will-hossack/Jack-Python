"""
Recursive function to calculate the nth Fibonacci number.
The nth Fibonacci number is defined mathematically as the function:

        0 if n = 0
f(n) =  1 if n = 1
        f(n-1)+f(n-2) if n>1

This is the definition we will implement in our code.
"""

def fibonacci(n):
    if n == 0: ## first case
        return 0
    elif n ==1: ## second case
        return 1
    else: ## third case (notice we haven't accounted for the possiblity that n<0 or n not an integer)
        return fibonacci(n-1) + fibonacci(n-2)

def main(): ## Main method to test our code for the first 10 Fibonacci numbers

    fibonacciNumbers = [0,1,1,2,3,5,8,13,21,34] ##fill a list with first 10 Fibonacci numbers, (I got them from Wikipedia)

    functionWorks = True ## boolean value to tell us whether our function worked

    for i in range(0,10): ## use a for loop to compare our list to first 10 values generated by our function
        if(fibonacci(i) != fibonacciNumbers[i]):
            print(str(i) + " term in the series is incorrect") ## print the term which the function breaks on
            functionWorks = False ## if its broken we must set our boolean to false since the default is true
            break; ## stop the loop, we know the function is broken at this point

    if(functionWorks): ## print out whether the function worked or not
        print("Fibonacci function is correct!")

    else:
        print("Fibonacci function is broken!")

main()


